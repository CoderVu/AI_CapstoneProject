name: Build and Deploy AI App to Azure VM

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_AI }}
          password: ${{ secrets.DOCKERHUB_TOKEN_AI }}

      - name: Build and Push Docker image
        run: |
          # Set image name with tag
          IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME_AI }}/flask-ai-app:latest
          
          # Build image
          docker build -t $IMAGE_NAME .
          
          # Push to DockerHub
          docker push $IMAGE_NAME
          
          echo "Successfully built and pushed image: $IMAGE_NAME"

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 20.3.131.196
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Login to DockerHub
            echo ${{ secrets.DOCKERHUB_TOKEN_AI }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME_AI }} --password-stdin
            
            # Set image name
            IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME_AI }}/flask-ai-app:latest
            
            # Kiểm tra và dừng container cũ nếu đang chạy
            if [ "$(docker ps -q -f name=flask-ai-app)" ]; then
              docker stop flask-ai-app
            fi
            if [ "$(docker ps -a -q -f name=flask-ai-app)" ]; then
              docker rm flask-ai-app
            fi

            # Xóa image cũ nếu có
            docker rmi $IMAGE_NAME || true

            # Pull image mới từ DockerHub
            docker pull $IMAGE_NAME
            
            # Chạy container mới trong network dockervu
            docker run -d --name flask-ai-app \
              --network dockervu \
              -p 5000:5000 \
              -v ai-temp:/app/temp \
              -e API_URL=http://springboot_capstone:8080/api/v1/public \
              -e AZURE_URL=${{ secrets.AZURE_URL }} \
              -e FLASK_ENV=production \
              -e FLASK_APP=app2.py \
              $IMAGE_NAME

            # Logout khỏi DockerHub
            docker logout

            # Log deployment status và cấu hình
            echo "Deployment completed. Container status:"
            docker ps -a | grep flask-ai-app
            echo "Current configuration:"
            echo "API_URL: http://springboot_capstone:8080/api/v1/public"
            echo "AZURE_URL: ${{ secrets.AZURE_URL }}"
            echo "Image: $IMAGE_NAME"
            echo "Network: dockervu" 